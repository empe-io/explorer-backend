
services:
  graphql-engine:
    image: hasura/graphql-engine:v2.38.0
    container_name: hasura
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_DATABASE_URL: "postgres://admin:admin@192.168.1.15:5438/callisto-test"
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://admin:admin@192.168.1.15:5438/callisto-test"
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      #PG_DATABASE_URL: postgres://callisto:VRaASqPx985fq43kRJGgpcxU@172.17.0.1:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      #HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: "M55pCHyuoxMEgHajA87U4sH"
      #HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      ACTION_BASE_URL: "http://54.36.166.124:3001"
      #ACTION_BASE_URL: "https://bdjuno-testnet.empe.io"
